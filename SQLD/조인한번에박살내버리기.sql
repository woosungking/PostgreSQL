-- 미래에 join이 또 햇갈릴 나 자신아 이걸 보도록 해라.

create table 고객(
고객번호 int,
고객이름 text,
주소 text,
전화번호 bigint
);
create table 상품(
상품번호 int,
상품이름 text,
무게 bigint,
가격 bigint
);
create table 주문(
고객번호 int,
상품번호 int,
수량 int,
날짜 bigint
);

INSERT INTO 고객 (고객번호, 고객이름, 주소, 전화번호) VALUES
(1, '홍길동', '서울시 강남구 역삼동', 1234567890),
(2, '이순신', '서울시 종로구 청운동', 2345678901),
(3, '김유신', '부산시 해운대구 좌동', 3456789012),
(4, '장보고', '서울시 마포구 상암동', 4567890123);

INSERT INTO 상품 (상품번호, 상품이름, 무게, 가격) VALUES
(1, '스마트폰', 200, 500000),
(2, '노트북', 1500, 1500000),
(3, '헤드폰', 300, 150000),
(4, '키보드', 800, 80000);

INSERT INTO 주문 (고객번호, 상품번호, 수량, 날짜) VALUES
(1, 1, 2, 20230801),
(1, 3, 1, 20230802),
(2, 2, 1, 20230803),
(3, 4, 3, 20230804),
(4, 1, 1, 20230805);


	-- 요따구로 연관성도 없는 테이블끼리 합쳐버리면, 곱하기가 되버리니까 하지말기
select 고객.고객이름, 고객.전화번호, 상품.상품이름 from 고객, 상품 


	-- 내 나름의 조인 꿀팁@@@@@@@.
	-- "고객이 주문한 상품과, 그 고객의 이름을 보이도록 하시오." 가 문제라면 난 그냥 못푼다.
	-- 먼저 주문 테이블을 보면 fk 값으로 상품 번호와 그 상품을 주문한 고객의 pk가 fk로 들어와있다.
	-- 그럼 먼저 select 주문.고객번호, 주문.상품번호 from 주문 이런식으로 먼저 써놓는다.
	-- 그 후 조인까지 한다

select 주문.고객번호, 주문.상품번호 from 주문
inner join 상품 on 상품.상품번호 = 주문.상품번호
inner join 고객 on 고객.고객번호 = 주문.고객번호
	-- 여기까지는 조건에 맞는것들끼리 조인을 하면 되므로 어려움이 없다.
	-- 여기서 쿼리를 바로 날리면 진짜 고객번호랑 상품번호 밖에 안뜨니까


select 고객.고객이름, 상품.상품이름, 주문.고객번호, 주문.상품번호 from 주문
inner join 상품 on 상품.상품번호 = 주문.상품번호
inner join 고객 on 고객.고객번호 = 주문.고객번호
order by 고객.고객이름 DESC

	--요론식으로 추가를 해준다, from 절에 고객, 상품, 주문 이 3가지 테이블을 다 넣어야하나 부터해서 너무 어려웠는데 어차피
	--join으로 인해 다 땡겨져서 오기때문에 가장 큰 부모를 먼저 from 으로 가지고 오고 나머지를 join 시키는게 나름 꿀팁인거 같다.



------------ left join 을 해보자 -----------------------

select 고객.고객이름, 상품.상품이름, 주문.고객번호, 주문.상품번호 from 주문
left join 상품 on 상품.상품번호 = 주문.상품번호
left join 고객 on 고객.고객번호 = 주문.고객번호
order by 고객.고객이름 DESC

	--	위 inner 를 left로 바꾼거다. 하지만 쿼리를 날려도 inner join이랑 똑같다 왜냐고 ?
	-- LEFT 조인의 뜻을 생각해보자. inner조인은 on 절에 짝짝쿵 맞는 친구들만 보여주지만.
	-- LEFT조인은 위 행위에 더해서 왼쪽에 있는 테이블에 있는 데이터를 다 보여준다, 그게 설령 null값이더라도
	-- 내가 위에서 집어넣은 "주문"테이블에 고객번호, 상품번호는 전부!!! "고객","상품" 테이블의 PK값과 대응되기 때문에 left,right를 해도 전부 다 같은 결과가 나옴.


-- 일부러 null값이 나오게 데이터를 더 삽입해보자.
-- 10,12 뭐 이런 숫자가 보이는데 "고객","상품"테이블의 PK어디에도 대응되지 않는다. 즉 의미 없는 값을 일부러 넣어준거다.

INSERT INTO 주문 (고객번호, 상품번호, 수량, 날짜) VALUES
(1, 10, 2, 20230801),
(1, 12, 2, 20230801),
(2, 12, 2, 20230801),
(10, 1, 2, 20230801),
(10, 2, 2, 20230801),
(12, 1, 2, 20230801),
(12, 12, 2, 20230801); -- 전부다 대응이 안되는 값으로 추가함.


select 고객.고객이름, 상품.상품이름, 주문.고객번호, 주문.상품번호 from 주문
left join 상품 on 상품.상품번호 = 주문.상품번호
left join 고객 on 고객.고객번호 = 주문.고객번호
order by 고객.고객이름 DESC 

	-- 짜잔 확실히 데이터를 추가하기 전보다 완전 다르다.
	-- 일단 left조인은 join ~ on "조건" 절에 상관 없이 주인공이 되는 왼쪽테이블에 값이 on절에 부합하지 않더라도 보여준다.
	-- left join 에서 주인공은 " select ~ from "주인공 테이블" " 이다. 만대로 right 조인을 하면 from 절 뒤에 처음 나오는 테이블이 주인공이 되겠지.


-- 데이터를 추가한 상태에서 innner조인을 한번 더 해보면 맨 처음이랑 같다는걸 한번 더 알 수 있을것이다.
select 고객.고객이름, 상품.상품이름, 주문.고객번호, 주문.상품번호 from 주문
inner join 상품 on 상품.상품번호 = 주문.상품번호
inner join 고객 on 고객.고객번호 = 주문.고객번호
order by 고객.고객이름 DESC


